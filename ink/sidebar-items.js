window.SIDEBAR_ITEMS = {"attr":[["chain_extension","Defines the interface for a chain extension."],["contract","Entry point for writing ink! smart contracts."],["storage_item","Prepares the type to be fully compatible and usable with the storage. It implements all necessary traits and calculates the storage key for types. `Packed` types don’t have a storage key, but non-packed types (like `Mapping`, `Lazy` etc.) require calculating the storage key during compilation."],["test","Defines a unit test that makes use of ink!’s off-chain testing capabilities."],["trait_definition","Marks trait definitions to ink! as special ink! trait definitions."]],"enum":[["LangError","An error emitted by the smart contracting language."]],"macro":[["blake2x256","Computes and expands into the BLAKE2b 256-bit hash of the string input."],["selector_bytes","Computes the ink! selector of the string and expands into its byte representation."],["selector_id","Computes the ink! selector of the string and expands into its `u32` representation."]],"mod":[["codegen","Definitions and facilities mainly used by the ink! codegen."],["reflect","Definitions and utilities for ink! smart contract static reflection."],["storage",""]],"struct":[["EnvAccess","The API behind the `self.env()` and `Self::env()` syntax in ink!."]],"trait":[["ChainExtensionInstance","Trait implemented by chain extensions."],["ToAccountId","Implemented by contracts that are compiled as dependencies."]]};