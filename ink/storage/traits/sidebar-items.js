window.SIDEBAR_ITEMS = {"derive":[["Storable","Derives `ink::storage`’s `Storable` trait for the given `struct`, `enum` or `union`."],["StorableHint","Derives `ink::storage`’s `StorableHint` trait for the given `struct` or `enum`."],["StorageKey","Derives `ink::storage`’s `StorageKey` trait for the given `struct` or `enum`."],["StorageLayout","Derives `ink::storage`’s `StorageLayout` trait for the given `struct` or `enum`."]],"struct":[["AutoKey","Auto key type means that the storage key should be calculated automatically."],["ManualKey","Manual key type specifies the storage key."],["ResolverKey","Resolver key type selects between preferred key and autogenerated key. If the `L` type is `AutoKey` it returns auto-generated `R` else `L`."]],"trait":[["AutoStorableHint","Automatically returns the type that should be used for storing the value."],["Packed","Trait for describing types that can be read and written to storage while all fields occupy only a single storage cell."],["Storable","Trait for representing types which can be read and written to storage."],["StorableHint","Describes the type that should be used for storing the value and preferred storage key."],["StorageKey","Holds storage key for the type."],["StorageLayout","Implemented by types that have a storage layout."]]};